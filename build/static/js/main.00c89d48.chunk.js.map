{"version":3,"sources":["theme/boxShadow.js","theme/colours.js","theme/radius.js","theme/spacing.js","theme/textSize.js","theme/GlobalStyle.js","components/App/styles.tsx","components/Header/styles.tsx","components/Header/Header.tsx","utils/index.ts","components/Upload/styles.tsx","components/Upload/UploadFormlet.tsx","components/Upload/Upload.tsx","components/Upload/UploadContainer.tsx","components/Preview/style.js","components/Preview/Preview.tsx","components/ControlPanel/styles.js","components/Button/styles.tsx","components/Button/Button.tsx","components/ToggleSwitch/styles.tsx","components/Input/styles.tsx","components/ToggleSwitch/ToggleSwitch.tsx","components/Input/Input.tsx","components/AspectLock/styles.tsx","components/AspectLock/AspectLock.tsx","components/ControlPanel/ControlPanel.tsx","components/LoadOverlay/style.js","components/LoadOverlay/LoadOverlay.tsx","components/Footer/styles.tsx","components/Footer/Footer.tsx","components/App/App.tsx","index.tsx"],"names":["boxShadow","colours","100","200","250","300","400","500","700","radius","spacing","textSize","GlobalStyle","createGlobalStyle","MainWrapper","styled","main","Frame","div","includeFrame","frameColor","Logo","img","HeaderWrapper","Header","src","alt","isTouchDevice","window","navigator","msMaxTouchPoints","UploadArea","draggingOver","LabelPill","label","ErrorPanel","UploadFormlet","handleUpload","onClick","handleClick","e","target","value","onChange","files","type","id","name","style","display","htmlFor","Upload","error","handleFileUpload","clearError","useState","setDraggingOver","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","UploadContainer","uploadImage","setError","file","test","size","message","handleAllowedFiles","File","hasOwnProperty","url","URL","createObjectURL","Image","Preview","handleOnLoad","artworkRef","useRef","onLoad","current","ref","ControlPanelWrapper","ScrollTrack","InputGroup","ButtonWrapper","PanelPositioning","Pill","button","tier","Button","children","disabled","ToggleLabel","InputStyled","input","InputWrapper","MainLabel","ToggleSwitch","defaultChecked","isChecked","setIsChecked","handleOnChange","prev","justifyContent","checked","Input","handleValue","inputId","unit","val","placeholder","LockButton","HeightLock","state","onToggle","unlink","width","height","viewBox","fill","xmlns","d","link","ControlPanel","resetApp","destroyQr","loadingState","launchAr","toggleFrame","handleFrameColor","aspectRatio","floor","setFloor","setWidth","y","setHeight","aspectLocked","setAspectLocked","className","Math","x","color","triangle","colors","Loader","LoadOverlay","FooterSignoff","p","Footer","href","rel","App","image","setImageUrl","qrUrl","setQrUrl","loading","setLoading","setIncludeFrame","setFrameColor","setAspectRatio","handleDeliverAr","document","createElement","innerHTML","click","generateFauxArLink","qr","base","location","origin","generateQr","handleImageLoaded","artworkNode","getBoundingClientRect","setArtworkAspectRatio","floorHeight","loader","GLTFLoader","tLoader","TextureLoader","Promise","res","rej","load","texture","flipY","artworkMaterial","MeshBasicMaterial","map","frameMaterial","MeshPhongMaterial","frameParts","gltf","scene","paper","scaleHeight","floorScale","traverse","o","isMesh","material","scale","set","translateY","movementFactorX","translateX","movementFactorY","movementFactor","includes","visible","compileGlb","then","exporter","GLTFExporter","resolve","reject","parse","glb","fd","FormData","append","Blob","fetch","method","body","json","data","binary","generateAr","hex","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00c89d48.chunk.js","sourcesContent":["export const boxShadow = {\n    sm: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\n    md: '0 4px 12px -1px rgba(0, 0, 0, 0.2), 0 2px 4px -1px rgba(0, 0, 0, 0.4)',\n    lg: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n    xl: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n    xlTop: '0 -25px 50px -12px rgba(0, 0, 0, 0.05)',\n    inner: 'inset 5px 5px 5px 0 rgba(0, 0, 0, 0.2)',\n    input: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)' \n}\n\n","export const colours = {\n    white: '#FFFFFF',\n    gray: {\n        100: '#FAFAFA',\n        200: '#F4F4F5',\n        250: '#D1D5DB',\n        300: '#A1A1AA',\n        400: '#3F3F46',\n        500: '#18181B'\n    },\n    rose: {\n        300: '#FDA4AF',\n        400: '#FB7185',\n        500: '#E11D48'\n    },\n    green: {\n        100: '#D1FAE5',\n        500: '#10B981',\n        700: '#047857'\n    }\n}","export const radius = {\n    none: '0px',\n    sm: '3px',\n    md: '4px',\n    full: '9999px'\n}","export const spacing = {\n    1: '0.25rem',\n    2: '0.5rem',\n    3: '0.75rem',\n    4: '1rem',\n    5: '1.25rem',\n    6: '1.5rem',\n    7: '1.75rem',\n    8: '2rem',\n    9: '2.25rem',\n    10: '2.5rem',\n    12: '3rem',\n    14: '3.5rem',\n    16: '4rem',\n    20: '5rem',\n    24: '6rem'\n}","export const textSize = {\n    xs: '0.75rem',\n    sm: '0.875rem',\n    base: '1rem',\n    lg: '1.125rem',\n    xl: '1.25rem',\n    xxl: '1.5rem' \n}","import { createGlobalStyle } from 'styled-components';\nimport { boxShadow } from './boxShadow';\nimport {colours} from './colours';\nimport { radius } from './radius';\nimport { spacing } from './spacing';\nimport { textSize } from './textSize';\n\n/**\n * This is base reset created by Tailwind called Preflight.\n * https://tailwindcss.com/docs/preflight\n */\n\nexport const GlobalStyle = createGlobalStyle`\n\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap');\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n:root {\n  -moz-tab-size: 4;\n  tab-size: 4;\n}\n\nhtml {\n  line-height: 1.15;\n  -webkit-text-size-adjust: 100%;\n}\n\nbody, html, #root {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  background-color ${colours.gray['100']};\n  color: ${colours.gray['400']};\n}\n\nbody {\n  font-family:\n    'Poppins',\n\t\tsystem-ui,\n\t\t-apple-system,\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n\ncanvas {\n  position: fixed;\n  top: 0; right: 0; left: 0; bottom: 0;\n  z-index: 999;\n}\n\nhr {\n  height: 0;\n  color: inherit;\n}\n\nabbr[title] {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\ncode,\nkbd,\nsamp,\npre {\n  font-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n}\n\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button;\n}\n\n::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\nlegend {\n  padding: 0;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\nsummary {\n  display: list-item;\n}\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  font-family: 'Poppins', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #e5e7eb; /* 2 */\n}\n\nhr {\n  border-top-width: 1px;\n}\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  color: #9ca3af;\n}\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  vertical-align: middle;\n}\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n.block-picker {\n  margin-top: ${spacing[4]};\n  border-radius: ${radius.sm};\n  overflow: hidden;\n  width: 100% !important;\n  box-shadow: none !important;\n  \n  > div:nth-child(2) {\n    border-radius: 0 !important;\n  }\n\n  > div {\n    width: 100% !important;\n  }\n\n  span > div {\n    box-shadow: ${boxShadow.sm} !important;\n    height: 34px !important;\n    width: 34px !important;\n  }\n\n  input {\n    width: 100% !important;\n    background: ${colours.gray[200]};\n    border: 0 !important;\n    padding: ${spacing[1]} ${spacing[3]} !important;\n    font-size: ${textSize.sm} !important;\n    height: auto !important;\n    color: ${colours.gray[400]} !important;\n    box-shadow none !important;\n  }\n}\n`","import styled from 'styled-components';\nimport {spacing, radius, boxShadow} from '../../theme';\n\nexport const MainWrapper = styled.main`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    height: 100%;\n    padding: ${spacing[10]};\n`\n\nexport const Frame = styled.div<{frameColor: string; includeFrame: boolean}>`\nbox-shadow: ${boxShadow.md};\n${({includeFrame, frameColor}) => includeFrame ?\n    `border: ${spacing[2]} solid ${frameColor};`\n    : ''}\nborder-radius: ${radius.sm};\nposition: relative;\n&:before {\n    content: '';\n    display: block;\n    box-shadow: ${boxShadow.inner};\n    position: absolute;\n    top: 0; left: 0;\n    bottom: 0; right: 0;\n    pointer-events: none;\n    z-index: 10;\n}\n`\n\n","import styled from 'styled-components';\nimport {colours, spacing, textSize} from '../../theme'; \n\nexport const Logo = styled.img`\n    height: ${spacing[8]};\n    width:auto;\n    margin-bottom: ${spacing[2]};\n`\n\nexport const HeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n\n    p {\n        font-size: ${textSize.xs};\n        color: ${colours.gray[400]};\n        text-align: center;\n        font-weight: 500;\n    }\n`","import React from 'react';\nimport {HeaderWrapper, Logo} from './styles';\n\nconst Header = () => {\n    return (\n        <HeaderWrapper>\n        <Logo src=\"ar-logo-inline.svg\" alt=\"arshel\" />\n        <p>Display framed artwork in AR</p>\n      </HeaderWrapper>\n    );\n};\n\nexport default Header;","import { TextureLoader, MeshBasicMaterial, MeshPhongMaterial, Mesh, Object3D } from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter';\n\nconst debugMode = false;\nconst debugIP = '';\n\n/**\n * If this has issues, it may be worth looking into it here\n * https://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript\n */\nexport const isTouchDevice = () => 'ontouchstart' in window || navigator.msMaxTouchPoints;\n\n\n/**\n * This function is used in testing only, it bypasses the AR stage and directly downloads the .glb file\n * \n * @param scene     The Scene extracted from the .glb file\n */\nexport const downloadFile = (scene: Object3D) => {\n    const exporter = new GLTFExporter();\n    exporter.parse(scene, function (glb) {\n        const link = document.createElement('a');\n        link.style.display = 'none';\n        document.body.appendChild(link);\n\n\n        const blob = new Blob([(glb as ArrayBuffer)], { type: 'application/octet-stream' });\n        const objectURL = URL.createObjectURL(blob);\n\n        link.href = objectURL;\n        link.href = URL.createObjectURL(blob);\n        link.download = 'test.glb';\n        link.click();\n    }, { binary: true });\n}\n\n/**\n * Takes the .glb scene after artwork has been applied, exports it a blob\n * and sends it to the generate-ar endpoint\n * \n * @param scene     The Scene extracted from the .glb file\n */\n\nexport const generateAr = (scene: Object3D) => {\n\n    const exporter = new GLTFExporter();\n\n    return new Promise((resolve, reject) => {\n        exporter.parse(scene, function (glb) {\n            const fd = new FormData();\n            fd.append('file', new Blob([(glb as ArrayBuffer)], { type: 'application/octet-stream' }));\n\n            fetch('/generate-ar', {\n                method: 'POST',\n                body: fd\n            })\n                .then(res => res.json())\n                .then(data => resolve(data));\n\n        }, { binary: true });\n    });\n}\n\n/**\n * Returns a link to a QR code that opens the .usdz file\n * \n * @param file      The path to the .usdz file compiled by the usdpython script\n */\n\nexport const generateQr = (file: string) => {\n    const base = debugMode ? `http://${debugIP}:3000` : window.location.origin;\n    const api = `https://api.qrserver.com/v1/create-qr-code/?format=svg&color=E11D48&size=600x600&data=${base}/${file}`;\n    return api;\n}\n\n/**\n * Loads the base frame.glb. Texture's the viewport mesh with the supplied artwork,\n * Does frame resizing and resolves the ThreeJS Scene, ready to be converted to blob  \n *    \n * @param url               The URL of the artwork\n * @param width             Width in mm of the artwork\n * @param height            Height in mm of the artwork\n * @param floorHeight       Height in mm from floor to bottom of frame\n * @param includeFrame      Whether to include the frame\n * @param frameColor        The Hex color of the frame\n */\n\nexport const compileGlb = (url: string, width: number, height: number, floorHeight: number, includeFrame: boolean, frameColor: string) => {\n    const loader = new GLTFLoader();\n    const tLoader = new TextureLoader();\n    return new Promise((res, rej) => {\n        tLoader.load(url, (texture) => {\n            texture.flipY = true;\n            const artworkMaterial = new MeshBasicMaterial({ map: texture });\n            const frameMaterial = new MeshPhongMaterial({ color: frameColor });\n            const frameParts = ['bottom', 'top', 'left', 'right', 'corner_tl', 'corner_tr', 'corner_bl', 'corner_br'];\n\n            loader.load('./frame.glb', (gltf) => {\n                const { scene } = gltf;\n                const paperScale = (w: number, h: number) => [w / 1000, h / 1000];\n                const floorScale = (floorHeight: number, scaleHeight: number) => {\n                    const res = (floorHeight / 1000 - 1) - ((1 - scaleHeight / 1000) / 2);\n                    return res;\n                }\n                const paper = paperScale(width, height);\n                const floor = floorScale(floorHeight, height);\n\n                scene.traverse((o) => {\n                    if ((o as Mesh).isMesh && o.name === 'viewport') {\n                        (o as Mesh).material = artworkMaterial;\n                        o.scale.set(paper[0], 1, paper[1]);\n                    }\n\n                    /** \n                     * Height controller\n                     */\n\n                    if (o.name === 'h_controller') {\n                       o.translateY(floor);\n                    } \n\n                    /** Resize based on size input */\n\n                    if (o.name === 'left' || o.name === 'right') {\n                        const movementFactorX = o.name === 'left' ? 2 : -2;\n                        o.scale.set(1, paper[1] * 1.1, 1);\n                        o.translateX((1 - paper[0]) / movementFactorX);\n                    }\n\n                    if (o.name === 'bottom' || o.name === 'top') {\n                        const movementFactorY = o.name === 'bottom' ? 2 : - 2;\n                        o.scale.set(paper[0] * 1.1, 1, 1);\n                        o.translateY((1 - paper[1]) / movementFactorY);\n                    }\n\n                    if (o.name === 'corner_tl' || o.name === 'corner_tr') {\n                        const movementFactor = o.name === 'corner_tl' ? 2 : -2;\n                        o.translateX((1 - paper[0]) / movementFactor);\n                        o.translateY((1 - paper[1]) / -2);\n                    }\n\n                    if (o.name === 'corner_bl' || o.name === 'corner_br') {\n                        const movementFactor = o.name === 'corner_bl' ? 2 : -2;\n                        o.translateX((1 - paper[0]) / movementFactor);\n                        o.translateY((1 - paper[1]) / 2);\n                    }\n\n                    /** Frame */\n\n                    if (frameParts.includes(o.name)) {\n                        if (includeFrame) { \n                            (o as Mesh).material = frameMaterial;\n                        } else {\n                            o.visible = false;\n                        }\n                    }\n\n\n                });\n\n                res(scene);\n            });\n        });\n\n    });\n};\n\n/**\n * Creates a faux link element compliant with AR linking, and triggers\n * a click on the element. Runs on mobile only.\n * \n * @param url       The url of the .usdz file complied by usdpython script\n */\n\nexport const generateFauxArLink = (url: string) => {\n    const link = document.createElement('a');\n      link.href = url;\n      link.rel = 'ar';\n      link.innerHTML = '<img src=\"ar.png\" />';\n      link.click();\n}\n\ninterface UploadError {\n    type: 'error';\n    message: string;\n}\n\nexport const handleAllowedFiles = (file: File): UploadError | File => {\n    if (/\\.(jpe?g|png)$/i.test(file.name) === false )\n        return {type: 'error', 'message': 'Sorry, the file must be a JPEG or PNG.'};\n\n    if (file.size * 1e-6 > 2)\n        return {type: 'error', message: 'Sorry, the file must be below 2MB'};\n\n    return file;\n}\n\n\nexport { };\n\n","import styled from 'styled-components';\nimport {colours, radius, spacing, textSize, boxShadow} from '../../theme';\n\nexport const UploadArea = styled.div<{draggingOver: boolean}>`\n    background-color: ${colours.white};\n    border-radius: ${radius.sm};\n    padding: ${spacing[24]};\n    position: relative;\n    color: ${colours.rose[500]};\n    text-align: center;\n    overflow: hidden;\n    * {\n        position: relative;\n        z-index: 2;\n    }\n    &:before {\n        content: '';\n        display: block;\n        position: absolute;\n        z-index: 1;\n        border: 2px dashed ${({draggingOver}) => draggingOver ? colours.rose[500] : colours.rose[300]};\n        border-radius: ${radius.sm};\n        top: ${spacing[4]};\n        left: ${spacing[4]};\n        bottom: ${spacing[4]};\n        right: ${spacing[4]};\n        transition: border 0.25 ease-out;\n    };\n`\n\nexport  const LabelPill = styled.label`\nbackground-color: ${colours.gray[200]};\ndisplay: inline-block;\ncursor: pointer;\ncolor: ${colours.rose[500]};\npadding: ${spacing[2]} ${spacing[3]};\nborder-radius: ${radius.sm};\nline-height: 1;\nmargin: ${spacing[1]};\nfont-size: ${textSize.sm};\ntransition: transform 0.25 ease-out;\n&:hover {\n    box-shadow: ${boxShadow.sm};\n    transform: translateY(-1px);\n}\n&:active {\n    box-shadow: ${boxShadow.input};\n    transform: translateY(0);\n}\n`\n\nexport const ErrorPanel = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    padding: ${spacing[3]};\n    background-color: ${colours.rose[500]};\n    color: ${colours.white};\n    text-center;\n    font-weight: medium;\n    font-size: ${textSize.sm};\n    animation: slideOut 0.5s ease-out 3s forwards;\n\n    @keyframes slideOut {\n        from {\n            top: 0\n        }\n        to {\n            top: -100px;\n        }\n    }\n`","import React, {useEffect, useRef} from 'react';\nimport {LabelPill} from './styles';\n\ninterface UploadFormletInterface {\n    onClick: () => void;\n    handleUpload: (files: FileList) => void;\n    error: string | false;\n}\n\nconst UploadFormlet: React.FC<UploadFormletInterface> = ({handleUpload, onClick}) => {\n\n    const handleClick = (e: React.MouseEvent<HTMLInputElement, MouseEvent>) => {\n        const element = e.target as HTMLInputElement;\n        element.value = '';\n        onClick();\n    }\n\n    return (\n        <>\n            <input\n            onClick={(e) => handleClick(e)}\n            onChange={ (e) => handleUpload((e.target.files as FileList))}\n            type=\"file\" id=\"BtnBrowseHidden\" name=\"files\" style={{display: 'none'}} />\n            <LabelPill htmlFor=\"BtnBrowseHidden\">\n                    upload\n            </LabelPill>\n        </>\n    );\n};\n\nexport default UploadFormlet;","import React, {useState} from 'react';\nimport UploadFormlet from './UploadFormlet';\nimport {UploadArea, ErrorPanel} from './styles';\n\ninterface UploadInterface {\n    handleFileUpload: (files: FileList) => void;\n    error: string | false;\n    clearError: () => void;\n}\n\nconst Upload: React.FC<UploadInterface> = ({error, handleFileUpload, clearError}) => {\n\n    const [draggingOver, setDraggingOver] = useState<boolean>(false);\n    \n    const dragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        clearError();\n        e.preventDefault();\n    }\n    \n    const dragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        setDraggingOver(true);\n    }\n    \n    const dragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        setDraggingOver(false);\n    }\n    \n    const fileDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n        setDraggingOver(false);\n        handleFileUpload(files);\n    }\n\n    return (\n        <UploadArea\n        onDragOver={dragOver}\n        onDragEnter={dragEnter}\n        onDragLeave={dragLeave}\n        onDrop={fileDrop}\n        draggingOver={draggingOver}\n        >\n            {error ? <ErrorPanel>{error}</ErrorPanel> : ''}\n            <p>Drag artwork here or <UploadFormlet error={error} onClick={clearError} handleUpload={handleFileUpload} /></p>\n        </UploadArea>\n    );\n};\n\nexport default Upload;","import React, {useState} from 'react';\nimport { handleAllowedFiles } from '../../utils';\nimport Upload from './Upload';\n\nconst UploadContainer: React.FC<{uploadImage: (url: string) => void}> = ({uploadImage}) => {\n\n    const [error, setError] = useState<string | false>(false);\n    \n    const convertToBlob = (files: FileList) => {\n        \n        \n        const file = handleAllowedFiles(files[0]);\n        if (!file)\n            return false;\n\n        if (!(file instanceof File) && file.hasOwnProperty('type') && file.type === 'error') {   \n            setError(file.message);\n            return false;\n        }\n            \n        const url = URL.createObjectURL(file);\n        uploadImage(url); \n    }\n\n    return (\n        <Upload\n        error={error}\n        clearError={() => setError(false)}\n        handleFileUpload={convertToBlob}\n        />\n    );\n};\n\nexport default UploadContainer;","import styled from 'styled-components';\n\nexport const Image = styled.img`\n    width: 100%;\n    max-width: 500px;\n    height: auto;\n`","import React, { useRef } from 'react';\nimport { Image } from './style';\n\n/**\n * The actual image component that either shows the image or the QR code\n */\n\ninterface PreviewInterface {\n    url: string;\n    handleOnLoad: (artworkRef: HTMLImageElement | null) => void\n}\n\nconst Preview: React.FC<PreviewInterface> = ({ url, handleOnLoad }) => {\n\n    const artworkRef = useRef<HTMLImageElement>(null);\n    return (\n        <Image\n            onLoad={() => handleOnLoad(artworkRef.current)}\n            ref={artworkRef}\n            src={url} alt=\"\" />\n    );\n};\n\nexport default Preview;","import styled from 'styled-components';\nimport {spacing, colours, boxShadow, textSize} from '../../theme';\n\nexport const ControlPanelWrapper = styled.div`\n    position: fixed;\n    top: 100vh;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    font-size: ${textSize.sm};\n    box-shadow: ${boxShadow.xlTop};\n    background-color: ${colours.white};\n    width: 100%;\n    z-index: 9999;\n    animation: slideUp 0.75s ease-out 0.5s forwards;\n\n    &.completed {\n       top: auto;\n       animation: none;\n    }\n\n    @media (min-width: 768px) {\n        max-width: 340px;\n        left: auto;\n        top: 0;\n        height: 100%;\n        animation: none;\n        &.completed {\n            top: 0;\n        }\n    }\n\n    @keyframes slideUp {\n        from {\n            top: 100vh;\n        }\n\n        to {\n            top: 50vh;\n        }\n    }\n`\n\nexport const ScrollTrack = styled.div`\n    width: 100%;\n    padding: ${spacing[10]};\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 0%;\n    justify-content: space-between;\n    align-items: flex-start;\n    overflow-y: auto;\n    &.completed {\n     display: none;\n    }\n        @media (min-width: 768px) {\n        &.completed {\n            display: flex;\n        }\n    }\n`\n\n\nexport const InputGroup = styled.div`\n    margin-bottom: ${spacing[16]};\n    h2 {\n        font-size: ${textSize.xs};\n        font-weight: bold;\n        color: ${colours.gray[500]};\n        margin-bottom: ${spacing[10]};\n        text-transform: uppercase;\n    }\n`\n\nexport const ButtonWrapper = styled.div`\n    padding: ${spacing[10]};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    box-shadow: ${boxShadow.xlTop};\n`\n\nexport const PanelPositioning = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`","import styled from 'styled-components';\nimport {radius, spacing, colours, textSize, boxShadow} from '../../theme';\n\nexport const Pill = styled.button<{tier: 'primary' | 'secondary' | 'loading' | 'completed'}>`\n    background-color: ${({tier}) =>\n        tier === 'primary' ?\n        colours.rose[500] :\n        tier === 'loading' ?\n        colours.gray[200] :\n        tier === 'completed' ?\n        colours.green[100] :\n        colours.gray[200]};\n    color: ${({tier}) =>\n    tier === 'primary' ?\n    colours.white :\n    tier === 'loading' ?\n    colours.gray[300] :\n    tier === 'completed' ?\n    colours.green[500] :\n    colours.rose[500]}};\n\n    padding: ${spacing[2]} ${spacing[3]};\n    border-radius: ${radius.sm};\n    line-height: 1;\n    font-size: ${textSize.sm};\n    transition: transform 0.25 ease-out;\n    &:hover {\n        box-shadow: ${boxShadow.sm};\n        transform: translateY(-1px);\n    }\n`","import React from 'react';\nimport {Pill} from './styles';\n\ninterface ButtonInterface {\n    tier?: 'primary' | 'secondary' | 'loading' | 'completed';\n    disabled?: boolean;\n    onClick: () => void\n}\n\nconst Button: React.FC<ButtonInterface> = ({children, disabled = false, tier = 'primary', onClick}) => {\n    return (\n        <Pill disabled={disabled} onClick={onClick} tier={tier}>{children}</Pill>\n    );\n};\n\nexport default Button;","import styled from 'styled-components';\nimport {colours} from '../../theme';\n\nexport const ToggleLabel = styled.label`\ntransform: translateX(-10px);\n  span span {\n    display: none;\n  }\n  display: inline-block;\n  height: 18px;\n  position: relative;\n  overflow: visible;\n  padding: 0;\n  margin-left: 50px;\n  cursor: pointer;\n  width: 40px;\n\n  * {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  label, > span {\n    line-height: 20px;\n    height: 20px;\n    vertical-align: middle;\n  }\n\n  input:focus ~ a, input:focus + label {\n    outline: none;\n  }\n\n  label {\n    position: relative;\n    z-index: 3;\n    display: block;\n    width: 100%;\n  }\n\n  input {\n    position: absolute;\n    opacity: 0;\n    z-index: 5;\n  }\n\n  > span {\n    position: absolute;\n    left: -50px;\n    width: 100%;\n    margin: 0;\n    padding-right: 50px;\n    text-align: left;\n    white-space: nowrap;\n  }\n  > span span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 5;\n    display: block;\n    width: 50%;\n    margin-left: 50px;\n    text-align: left;\n    font-size: 0.8em;\n    width: 100%;\n    left: 15%;\n    top: -2px;\n    opacity: 0;\n  }\n  i {\n    position: absolute;\n    right: 50%;\n    z-index: 4;\n    display: block;\n    height: 16px;\n    padding: 0;\n    left: 2px;\n    width: 16px;\n    background-color: #fff;\n    border: 1px solid ${colours.gray[250]};\n    border-radius: 100%;\n    -webkit-transition: all 0.2s ease-out;\n    -moz-transition: all 0.2s ease-out;\n    transition: all 0.2s ease-out;\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  }\n  > span span:first-of-type {\n    color: ${colours.gray[400]};\n    opacity: 1;\n    left: 45%;\n  }\n  > span:before {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 50px;\n    top: -2px;\n    background-color: ${colours.gray[200]};\n    border: 1px solid ${colours.gray[200]};\n    border-radius: 30px;\n    -webkit-transition: all 0.2s ease-out;\n    -moz-transition: all 0.2s ease-out;\n    transition: all 0.2s ease-out;\n  }\n  input:checked ~ i {\n    border-color: #fff;\n    left: 100%;\n    margin-left: -8px;\n  }\n  input:checked ~ span:before {\n    border-color: ${colours.rose[500]};\n    box-shadow: inset 0 0 0 30px ${colours.rose[500]};\n  }\n  input:checked ~ span span:first-of-type {\n    opacity: 0;\n  }\n  input:checked ~ span span:last-of-type {\n    opacity: 1;\n    color: #fff;\n  }\n`","import styled from 'styled-components';\nimport {spacing, colours, radius, textSize} from '../../theme';\n\nexport const InputStyled = styled.input`\n    padding: ${spacing[1]} ${spacing[3]};\n    border-radius: ${radius.sm};\n    background-color: ${colours.gray[200]};\n    margin: 0 ${spacing[2]} 0 ${spacing[6]};\n    max-width: ${spacing[20]};\n`\n\nexport const InputWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: ${spacing[4]};\n    label {\n        color: ${colours.gray[400]};\n        font-size: ${textSize.xs};\n        font-weight: medium;\n    }\n`\n\nexport const MainLabel = styled.label`\n    flex: 1 1 0%;\n    color: ${colours.rose[500]} !important;\n    font-size: ${textSize.xs};\n    font-weight: medium;\n`","import React, {useState} from 'react';\nimport {ToggleLabel} from './styles';\nimport {MainLabel} from '../Input/styles';\n\n/**\n * A general purpose toggle switch\n */\n\ninterface ToggleSwithcInterface {\n    onChange: (checked: boolean) => void;\n    defaultChecked: boolean;\n    label: string;\n}\n\nconst ToggleSwitch: React.FC<ToggleSwithcInterface> = ({onChange, defaultChecked, label}) => {\n\n    const [isChecked, setIsChecked] = useState(defaultChecked);\n\n    const handleOnChange = () => {\n        setIsChecked(prev => !prev);\n        onChange(!isChecked);\n    }\n\n    return (\n    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n        <MainLabel htmlFor=\"include_frame\">{label}</MainLabel>\n        <ToggleLabel>\n            <input\n            id=\"include_frame\"\n            onChange={() => handleOnChange()}\n            type=\"checkbox\" checked={isChecked} />\n            <span>\n                <span>OFF</span>\n                <span>ON</span>\n            </span>\n            <i></i>\n        </ToggleLabel>\n    </div>\n    );\n};\n\nexport default ToggleSwitch;","import React from 'react';\nimport {InputStyled, InputWrapper, MainLabel} from './styles';\n\ninterface InputInterface {\n    label: string;\n    handleValue: (val: number) => void;\n    value: number;\n    inputId: string;\n    unit?: string;\n    type?: \"number\" | \"text\";\n}\n\nconst Input: React.FC<InputInterface> = ({label, handleValue, inputId, value, unit, type = \"number\", children}) => {\n\n    const handleChange = (val: string) => {\n        handleValue(+val);\n    }\n\n    return (\n        <InputWrapper>\n            <MainLabel htmlFor={`#${inputId}`}>{label}</MainLabel>\n            {children}\n            <InputStyled\n                onChange={(e) => handleChange(e.target.value)}\n                value={value} \n                id={`#${inputId}`} \n                placeholder={`${value}`} \n                type={type} />\n            <label htmlFor={`#${inputId}`}>{unit}</label>\n        </InputWrapper>\n    );\n};\n\nexport default Input;","import styled from 'styled-components';\nimport { colours, radius, spacing } from '../../theme';\n\nexport const LockButton = styled.button`\n    outline: none;\n    background: ${colours.gray[200]};\n    border-radius: ${radius.md};\n    padding: ${spacing[1]};\n    transform: translateY(-100%);\n    &:focus {\n        outline: none;\n    }\n    &:before, &:after {\n        content: '';\n        display: block;\n        position: absolute;\n        height: 15px;\n        width: 10px;\n        left: 10px;\n        border-left: 2px solid ${colours.gray[200]};\n        \n    }\n\n    &:before {\n        top: -15px;\n        border-top: 2px solid ${colours.gray[200]};\n        border-radius: 3px 0 0 0;\n    }\n    &:after {\n        bottom: -15px;\n        border-bottom: 2px solid ${colours.gray[200]};\n        border-radius: 0 0 0 3px;\n    }\n`","import React from 'react';\nimport { LockButton } from './styles';\nimport { colours } from '../../theme';\n\n/**\n * \n * Component to toggle locking the width and height aspect when resizing\n */\n\nconst HeightLock: React.FC<{state: boolean; onToggle: () => void}> = ({state, onToggle}) => {\n\n    const unlink = <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill={colours.gray[300]} xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.949 14.121L19.071 12C20.0067 11.0613 20.5321 9.78992 20.5321 8.4645C20.5321 7.13908 20.0067 5.86771 19.071 4.929C18.1325 3.99281 16.8611 3.46705 15.5355 3.46705C14.2099 3.46705 12.9385 3.99281 12 4.929L11.293 5.636L12.707 7.05L13.414 6.343C13.9775 5.78199 14.7403 5.46703 15.5355 5.46703C16.3307 5.46703 17.0935 5.78199 17.657 6.343C18.2185 6.90627 18.5338 7.66917 18.5338 8.4645C18.5338 9.25983 18.2185 10.0227 17.657 10.586L15.535 12.707C15.292 12.9484 15.0057 13.1418 14.691 13.277L13.414 12L14.828 10.586L14.121 9.879C13.658 9.41312 13.1071 9.04374 12.5003 8.79227C11.8935 8.54079 11.2428 8.41222 10.586 8.414C10.351 8.414 10.122 8.446 9.895 8.48L3.707 2.293L2.293 3.707L20.293 21.707L21.707 20.293L16.171 14.757C16.448 14.573 16.709 14.361 16.949 14.121V14.121ZM10.586 17.657C10.0225 18.218 9.25967 18.533 8.4645 18.533C7.66933 18.533 6.90653 18.218 6.343 17.657C5.7815 17.0937 5.46621 16.3308 5.46621 15.5355C5.46621 14.7402 5.7815 13.9773 6.343 13.414L7.819 11.939L6.405 10.525L4.929 12C3.99329 12.9387 3.46787 14.2101 3.46787 15.5355C3.46787 16.8609 3.99329 18.1323 4.929 19.071C5.39287 19.5355 5.94397 19.9038 6.55062 20.1547C7.15727 20.4056 7.80751 20.5342 8.464 20.533C9.12066 20.5344 9.77111 20.4059 10.378 20.155C10.9848 19.9041 11.536 19.5357 12 19.071L12.707 18.364L11.293 16.95L10.586 17.657V17.657Z\" />\n    </svg>;\n\n    const link = <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill={colours.rose[500]} xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M8.46499 11.293C9.59799 10.16 11.574 10.16 12.707 11.293L13.414 12L14.828 10.586L14.121 9.879C13.178 8.935 11.922 8.414 10.586 8.414C9.24999 8.414 7.99399 8.935 7.05099 9.879L4.92899 12C3.99329 12.9387 3.46786 14.2101 3.46786 15.5355C3.46786 16.8609 3.99329 18.1323 4.92899 19.071C5.39287 19.5355 5.94396 19.9038 6.55061 20.1547C7.15726 20.4056 7.80751 20.5342 8.46399 20.533C9.12065 20.5344 9.77111 20.4059 10.3779 20.155C10.9848 19.9041 11.536 19.5357 12 19.071L12.707 18.364L11.293 16.95L10.586 17.657C10.0225 18.218 9.25966 18.533 8.46449 18.533C7.66932 18.533 6.90652 18.218 6.34299 17.657C5.7815 17.0937 5.4662 16.3308 5.4662 15.5355C5.4662 14.7402 5.7815 13.9773 6.34299 13.414L8.46499 11.293Z\" />\n        <path d=\"M12 4.929L11.293 5.636L12.707 7.05L13.414 6.343C13.9775 5.78199 14.7403 5.46703 15.5355 5.46703C16.3307 5.46703 17.0935 5.78199 17.657 6.343C18.2185 6.90627 18.5338 7.66917 18.5338 8.4645C18.5338 9.25983 18.2185 10.0227 17.657 10.586L15.535 12.707C14.402 13.84 12.426 13.84 11.293 12.707L10.586 12L9.172 13.414L9.879 14.121C10.822 15.065 12.078 15.586 13.414 15.586C14.75 15.586 16.006 15.065 16.949 14.121L19.071 12C20.0067 11.0613 20.5321 9.78992 20.5321 8.4645C20.5321 7.13908 20.0067 5.86772 19.071 4.929C18.1325 3.99281 16.8611 3.46705 15.5355 3.46705C14.2099 3.46705 12.9385 3.99281 12 4.929V4.929Z\" />\n    </svg>;\n\n    return (\n        <LockButton\n            onClick={() => onToggle()}      \n        >\n            {state ? link : unlink}\n        </LockButton>\n    );\n};\n\nexport default HeightLock;","import React, {useState} from 'react';\nimport {BlockPicker, ColorResult} from 'react-color';\nimport { ControlPanelWrapper, ButtonWrapper, InputGroup, ScrollTrack, PanelPositioning } from './styles';\nimport { Button } from '../Button';\nimport {ToggleSwitch} from '../ToggleSwitch';\nimport { Input } from '../Input';\nimport {HeightLock} from '../AspectLock';\nimport {isTouchDevice} from '../../utils';\n\ninterface ControlPanelInterface {\n    loadingState: 'waiting' | 'loading' | 'completed'; \n    resetApp: () => void;\n    destroyQr: () => void;\n    launchAr: (w: number, h: number, floor: number) => void;\n    toggleFrame: (state: boolean) => void;\n    frameColor: string;\n    handleFrameColor: (color: ColorResult) => void;\n    aspectRatio: {x: number, y:number} | null;\n}\n\nconst ControlPanel: React.FC<ControlPanelInterface> = ({ resetApp, destroyQr, loadingState, launchAr, toggleFrame, frameColor, handleFrameColor, aspectRatio }) => {\n\n\n    const [floor, setFloor] = useState<number>(1000);\n    const [width, setWidth] = useState<number>(500);\n    const [height, setHeight] = useState<number>(aspectRatio ? 500 * aspectRatio.y : 500);\n    const [aspectLocked, setAspectLocked] = useState<boolean>(true);\n\n\n    /**\n     * \n     * @param val Height in mm from floor to bottom of the artworks frame\n     */\n\n    const updateFloor = (val: number) => {\n        setFloor(val);\n        destroyQr();\n    }\n\n    /**\n     * \n     * @param val Width in mm of the frame\n     */\n    const updateWidth = (val: number) => {\n        setWidth(val);\n        if (aspectLocked) {\n            setHeight(aspectRatio ?  val * aspectRatio.y : val);\n        }\n        destroyQr();\n    }\n\n    /**\n     * \n     * @param val Height in mm of the frame\n     */\n    const updateHeight = (val: number) => {\n        setHeight(val);\n        if (aspectLocked) {\n            setWidth(aspectRatio ? val * aspectRatio.x : val);\n        }\n        destroyQr();\n    }\n\n    /**\n     * Toggle whether the aspect ratio should be locked when resizing\n     */\n\n    const handleAspectLock = () => {\n        setAspectLocked(prev => !prev);\n    }\n\n    return (\n        <ControlPanelWrapper className={loadingState === 'completed' ? 'completed' : ''}>\n            <PanelPositioning>\n                    <ScrollTrack className={loadingState === 'completed' ? 'completed' : ''}>\n                        <div style={{width: '100%'}}>\n                            <InputGroup>\n                                <h2>Set a few real world dimensions</h2>\n                                <Input handleValue={updateWidth} value={Math.floor(width)} unit=\"mm\" label=\"Width\" inputId=\"real_width\" />\n\n                                <Input handleValue={updateHeight} value={Math.floor(height)} unit=\"mm\" label=\"Height\" inputId=\"real_height\">\n                                    <HeightLock state={aspectLocked} onToggle={() => handleAspectLock()} />\n                                </Input>\n\n                                <Input handleValue={updateFloor} value={floor} unit=\"mm\" label=\"Height from floor\" inputId=\"floor_height\" />\n                            </InputGroup>\n\n                            <InputGroup>\n                                <h2>Adjust the frame</h2>\n                                <ToggleSwitch label=\"Include frame\" defaultChecked={true} onChange={toggleFrame} />\n                                <BlockPicker\n                                    color={frameColor}\n                                    onChange={handleFrameColor}\n                                    triangle='hide'\n                                    colors={['#FAFAFA', '#1f1e1e', '#b0b0b0', '#c2b99b', '#545042']}\n                                />\n                            </InputGroup>\n                        </div>\n                    </ScrollTrack>\n                    <ButtonWrapper>\n                            <Button onClick={resetApp} tier=\"secondary\">Back</Button>\n                            <Button\n                                tier={loadingState === 'loading' ? 'loading' : loadingState === 'completed' ? 'completed' : 'primary'}\n                                onClick={() => launchAr(width, height, floor)}\n                                disabled={loadingState !== 'waiting'}\n                                >\n                                    {loadingState === 'loading' ? 'Loading...' :\n                                    loadingState === 'completed' ?\n                                    isTouchDevice() ? 'Ready' : 'Scan QR code':\n                                    'Generate AR'}</Button>\n                    </ButtonWrapper>\n                </PanelPositioning>\n        </ControlPanelWrapper>\n    );\n};\n\nexport default ControlPanel;","import styled from 'styled-components';\nimport {colours, spacing, textSize} from '../../theme';\n\nexport const Loader = styled.div`\n    position: absolute;\n    top: 0; left: 0;\n    bottom: 0; right: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    backdrop-filter: blur(5px);\n    padding: ${spacing[10]};\n\n    p {\n        background-color: ${colours.green[500]};\n        position: absolute;\n        top: 0;\n        width: 100%;\n        text-align: center;\n        color: ${colours.green[100]};\n        padding: ${spacing[3]};\n        font-size: ${textSize.sm}\n    } \n    p:after {\n        content: '';\n        display: block;\n        height: 3px;\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 0%;\n        background: ${colours.green[700]};\n        z-index: 5;\n        animation: load 3s ease-in 0s forwards;\n    }\n\n    @keyframes load {\n        from {\n            width: 0%;\n        }\n        to {\n            width: 100%;\n        }\n    }\n`","import React from 'react';\nimport {isTouchDevice} from '../../utils';\nimport {Loader} from './style';\n\n/**\n * The overlay that shows when the QR code is being generated\n * TODO: disable this on mobile (QR isn't used on mobile)\n */\n\nconst LoadOverlay = () => {\n    return (\n        <Loader>\n            <p>{isTouchDevice() ? 'Launching AR...' : 'Get ready to scan the QR code that appears'}\n            </p>\n        </Loader>\n    );\n};\n\nexport default LoadOverlay;","import styled from 'styled-components';\nimport {textSize, colours} from '../../theme';\n\nexport const FooterSignoff = styled.p`\n    font-size: ${textSize.sm};\n    color: ${colours.gray[300]};\n    a {\n        color: ${colours.gray[400]};\n        text-decoration: underline;\n        transition: color 0.5s ease-out;\n    }\n    a:hover {\n        color: ${colours.rose[500]};\n    }\n`","import React from 'react';\nimport {FooterSignoff} from './styles';\n\nconst Footer = () => {\n    return (\n       <FooterSignoff>Made by <a href=\"https://twitter.com/KyleWetton\" target=\"_blank\" rel=\"noreferrer nofollow\">Kyle Wetton</a></FooterSignoff>\n    );\n};\n\nexport default Footer;","import React, { useState } from 'react';\nimport { ColorResult } from 'react-color';\nimport { MainWrapper, Frame, } from './styles';\nimport {Header} from '../Header';\nimport { Upload } from '../Upload';\nimport { Preview } from '../Preview';\nimport { ControlPanel } from '../ControlPanel';\nimport { generateQr, compileGlb, generateAr, isTouchDevice, generateFauxArLink } from '../../utils';\nimport { Object3D } from 'three';\nimport { LoadOverlay } from '../LoadOverlay';\nimport { Footer } from '../Footer';\n\n\ninterface ResponseInterface {\n  name: string;\n}\n\ninterface AspectRatioInterface {\n  x: number;\n  y: number;\n}\n\n\nfunction App() {\n\n  const [image, setImageUrl] = useState<string | null>(null);\n  const [qrUrl, setQrUrl] = useState<string | null>(null);\n  const [loading, setLoading] = useState<'loading' | 'waiting' | 'completed'>('waiting');\n  const [includeFrame, setIncludeFrame] = useState(true);\n  const [frameColor, setFrameColor] = useState('#FAFAFA');\n  const [aspectRatio, setAspectRatio] = useState<AspectRatioInterface | null>(null);\n\n  /**\n   * Reset the app to default\n   */\n  const handleReset = () => {\n    setImageUrl(null);\n    setQrUrl(null);\n    setLoading('waiting');\n    setAspectRatio(null);\n  }\n\n  /**\n   * \n   * @param url Url of the .usdz file and either generates a QR or opens the file directly (on mobile)\n   */\n  const handleDeliverAr = (url: string) => {\n    if (isTouchDevice()) {\n      setLoading('completed');\n      generateFauxArLink(url);\n    } else {\n      const qr = generateQr(url);\n      setQrUrl(qr);\n    }\n  }\n\n  /**\n   * Set image state after file upload\n   * \n   * @param url   The URL returned by the drop pad / Upload button\n   */\n  const handleUpload = (url: string) => {\n    setImageUrl(url);\n  }\n\n  /**\n   * Set the UI to 'loading' state\n   */\n  const handleSetLoading = () => {\n    setLoading('loading');\n  }\n\n  /**\n   * Calculates the relative width and height of the image,\n   * no strictly the format of aspect ratios, this value\n   * is used when the user has aspect lock enabled while\n   * resizing.\n   * \n   * @param artworkNode DOM element of the uploaded image\n   */\n\n  const setArtworkAspectRatio = (artworkNode: HTMLImageElement | null) => {\n\n    if (!artworkNode || qrUrl)\n      return null;\n    const {width, height} = artworkNode.getBoundingClientRect();\n    const widthAspect = width/height;  \n    const heightAspect = height/width;\n    const aspect = {x: widthAspect, y: heightAspect};\n    setAspectRatio(aspect);\n  }\n\n  /**\n   * Change the UI loading state to 'loaded' once the QR code is displayed\n   */\n  const handleImageLoaded = (artworkNode: HTMLImageElement | null) => {\n    if (qrUrl)\n        setLoading('completed');\n    else {\n      setArtworkAspectRatio(artworkNode);\n    }\n  }\n\n  /**\n   * Compiles the frame .glb with the image as a texture, then sends to server to \n   * generate the .usdz file and generates the QR code\n   * \n   * @param width   Width in mm of the artwork\n   * @param height  Height in mm of the artwork\n   * @param floorHeight Height in mm from floor to bottom of frame\n   */\n  const launchAr = (width: number, height: number, floorHeight: number) => {\n    if (!image)\n      return false;\n\n    handleSetLoading();\n    compileGlb(image, width, height, floorHeight, includeFrame, frameColor)\n      .then(\n        (file) => generateAr((file as Object3D))\n          .then((data) => {\n            const url = `storage/ar-${(data as ResponseInterface).name}.usdz`;\n            handleDeliverAr(url);\n          })\n      );\n  }\n\n  /**\n   * \n   * @param state Whether the 3D file should render with a frame\n   */\n  const handleToggleFrame = (state: boolean) => {\n    setIncludeFrame(state);\n  }\n\n  /**\n   * Remove QR code when control panel settings change\n   */\n  const handleDestroyQr = () => {\n    setQrUrl(null);\n    setLoading('waiting');\n  }\n\n  /**\n   * Returns current color object\n   * https://casesandberg.github.io/react-color/\n   * \n   * @param color   ColorResult Object\n   */\n  const handleFrameColor = (color: ColorResult) => {\n    setFrameColor(color.hex);\n  }\n\n  return (\n    <MainWrapper>\n      <Header />\n\n      <Frame\n        frameColor={frameColor}\n        includeFrame={includeFrame}\n      >\n        {loading === 'loading' ? <LoadOverlay /> : ''}\n        {image ?\n          <>\n            <Preview\n              handleOnLoad={ (artworkNode: HTMLImageElement | null) => handleImageLoaded(artworkNode)}\n              url={qrUrl ? qrUrl : image}\n              />\n          </>\n          : <Upload uploadImage={handleUpload} />}\n      </Frame>\n\n      {aspectRatio && <ControlPanel\n              loadingState={loading}\n              launchAr={launchAr}\n              resetApp={handleReset}\n              destroyQr={() => handleDestroyQr()}\n              toggleFrame={handleToggleFrame}\n              frameColor={frameColor}\n              handleFrameColor={handleFrameColor}\n              aspectRatio={aspectRatio}\n            />}\n\n\n        <Footer />\n    </MainWrapper>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './components/App';\nimport {GlobalStyle} from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}